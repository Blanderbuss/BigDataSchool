print(__doc__)



import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn import datasets, linear_model
from datetime import date
from sklearn.metrics import mean_squared_error, r2_score

X_in = pd.read_csv('BigDataSchool_features.csv', header=0, sep=',')
y_trn = pd.read_csv('BigDataSchool_train_set.csv', header=0, sep=',')
y_tst = pd.read_csv('BigDataSchool_test_set.csv', header=0, sep=',')

X_in.fillna(0, inplace=True)
ix = X_in.groupby(['ID'])['MONTH_NUM_FROM_EVENT'].transform(min) == X_in['MONTH_NUM_FROM_EVENT']
X_t = X_in[ix]

for id in X_t['ID']:
    df = X_in.loc[X_in['ID']==id]
    print(id)
    for col in df:
        X_t.loc[X_t['ID']==id,col+'_mean'] = df[col].mean()

X_y_train = pd.merge(X_in,y_trn, on='ID')
y = X_y_train[['ID','TARGET']]
X = X_y_train.drop('TARGET', axis=1)

X = X.drop('ID', axis = 1)
y = y['TARGET']

from sklearn.multiclass import OneVsRestClassifier
from sklearn.svm import LinearSVC
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_auc_score

X_train, X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)

lr = LogisticRegression()
lr.fit(X_train,y_train)
y_pred_test = lr.predict_proba(X_test)


print("Accuracy on testing set:", 
      round(roc_auc_score(y_test.values,y_pred_test[:,1]), 4))

X_y_test = pd.merge(X_in,y_tst, on='ID')
y = X_y_test[['ID','TARGET']]
X = X_y_test.drop('TARGET', axis=1)

X = X.drop('ID', axis = 1)
y = y['TARGET']


